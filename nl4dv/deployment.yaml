apiVersion: apps/v1
kind: Deployment
metadata:
  name: $CI_PROJECT_NAME
  namespace: $KUBE_NAMESPACE
  labels:
    app: $CI_PROJECT_NAME
spec:
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: $CI_PROJECT_NAME
  template:
    metadata:
      labels:
        app: $CI_PROJECT_NAME
    spec:
      containers:
      - name: $CI_PROJECT_NAME
        image: $CI_REGISTRY_IMAGE
        imagePullPolicy: Always
        env:
        - name: GITLAB_COMMIT_SHA
          value: "$CI_COMMIT_SHA"
      imagePullSecrets:
      - name: ${CI_PROJECT_NAME}-pull-secret
---
apiVersion: v1
kind: Service
metadata:
  name: $CI_PROJECT_NAME
  namespace: $KUBE_NAMESPACE
spec:
  selector:
    app: $CI_PROJECT_NAME
  ports:
  - name: web
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: $CI_PROJECT_NAME
  namespace: $KUBE_NAMESPACE
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt
    certmanager.k8s.io/acme-challenge-type: http01
spec:
  rules:
  - host: $HOST
    http:
      paths:
      - backend:
          serviceName: $CI_PROJECT_NAME
          servicePort: 80
  tls:
  - hosts:
    - $HOST
    secretName: ${CI_PROJECT_NAME}-tls-secret
